import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

//***** THIS PROTOTYPE PROJECT IS CURRENTLY NOT IN USE AND MAY NOT BE USED UNTIL IT HAS BEEN COMPLETED *****//
//***** THIS PROTOTYPE PROJECT IS CURRENTLY NOT IN USE AND MAY NOT BE USED UNTIL IT HAS BEEN COMPLETED *****//
//***** THIS PROTOTYPE PROJECT IS CURRENTLY NOT IN USE AND MAY NOT BE USED UNTIL IT HAS BEEN COMPLETED *****//
//***** THIS PROTOTYPE PROJECT IS CURRENTLY NOT IN USE AND MAY NOT BE USED UNTIL IT HAS BEEN COMPLETED *****//

public class Main 
{
	public static final String API_prefix =
		"https://en.wikipedia.org/w/api.php" +
		"?format=xml&action=query&prop=extracts&exlimit=max&explaintext&titles=";
	
	public static void main(String[] args)
	{
//		String wikiUrl = args[0];
		String wikiUrl = "Google";
		
		String xml = getWikiXML(wikiUrl);
		String out = ParseText (xml);
		System.out.println(xml);
	}
	
	public static String getWikiXML(String article)
	{
		StringBuilder sb = new StringBuilder();
		sb.append(API_prefix);
		sb.append(article);
				
		return getText(sb.toString());
	}

    public static String getText(String url)
    {
        try {
	        URL website = new URL(url);
	        URLConnection connection = website.openConnection();
	        BufferedReader in = new BufferedReader(
	                                new InputStreamReader(
	                                    connection.getInputStream()));
	
	        StringBuilder response = new StringBuilder();
	        String inputLine = "";
	        while ((inputLine = in.readLine()) != null) 
	        	response.append(inputLine);

			in.close();
			
	        return response.toString();
		} catch (IOException e) {
			Debug.Error(e.getMessage());
		}
        return "";
    }
    
    public static String ParseText(String xml)
    {
    	try {
    		File fXmlFile = new File("/Users/mkyong/staff.xml");
    		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
    		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
    		Document doc = dBuilder.parse(fXmlFile);
    				
    		//optional, but recommended
    		//read this - http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work
    		doc.getDocumentElement().normalize();

    		System.out.println("Root element :" + doc.getDocumentElement().getNodeName());
    				
    		NodeList nList = doc.getElementsByTagName("staff");
    				
    		System.out.println("----------------------------");

    		for (int temp = 0; temp < nList.getLength(); temp++) {

    			Node nNode = nList.item(temp);
    					
    			System.out.println("\nCurrent Element :" + nNode.getNodeName());
    					
    			if (nNode.getNodeType() == Node.ELEMENT_NODE) {

    				Element eElement = (Element) nNode;

    				System.out.println("Staff id : " + eElement.getAttribute("id"));
    				System.out.println("First Name : " + eElement.getElementsByTagName("firstname").item(0).getTextContent());
    				System.out.println("Last Name : " + eElement.getElementsByTagName("lastname").item(0).getTextContent());
    				System.out.println("Nick Name : " + eElement.getElementsByTagName("nickname").item(0).getTextContent());
    				System.out.println("Salary : " + eElement.getElementsByTagName("salary").item(0).getTextContent());

    			}
    		}
    	    } catch (Exception e) {
    		e.printStackTrace();
    	    }
    }
}
